@use './abstract' as * with (
  $breakpoints: (
    'sm': 640px,
    'md': 768px,
    'lg': 1024px,
    'xl': 1280px,
  )
);

html {
  scroll-behavior: smooth;
}

body {
  background-color: $primary;
}

.b {
  border: 2px solid $accent;
}

/* Flex */

.flex {
  display: flex;
  flex-direction: column;
}
.flex-row {
  display: flex;
  flex-direction: row;
}

/* Main Axis Alignment */

.justify-start {
  justify-content: flex-start;
}
.justify-end {
  justify-content: flex-end;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-around {
  justify-content: space-around;
}
.justify-evently {
  justify-content: space-evenly;
}

/* Cross Axis Alignment */

.items-start {
  align-items: flex-start;
}
.items-end {
  align-items: flex-end;
}
.items-center {
  align-items: center;
}
.items-baseline {
  align-items: baseline;
}
.items-stretch {
  align-items: stretch;
}

.flex-1 {
  flex: 1 1 0%;
}
.flex-auto {
  flex: 1 1 auto;
}
.flex-initial {
  flex: 0 1 auto;
}
.flex-none {
  flex: none;
}
.flex-grow {
  flex-grow: 1;
}

@media screen and (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}
@media screen and (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}
@media screen and (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

.bg-currrent {
  background: currentColor;
}

.bg-transparent {
  background: transparent;
}

.text-currrent {
  color: currentColor;
}

.text-transparent {
  color: transparent;
}

.bg-moon {
  @include moon-gradient-bg;
}

.hover\:bg-moon:hover {
  @include moon-gradient-bg;
}

.text-moon {
  @include moon-gradient-text;
}

.hover\:text-moon:hover {
  @include cloud-gradient-text;
}

.bg-cloud {
  @include cloud-gradient-bg;
}

.hover\:bg-cloud:hover {
  @include cloud-gradient-bg;
}

.text-cloud {
  @include cloud-gradient-text;
}

.hover\:text-cloud:hover {
  @include cloud-gradient-text;
}

.bg {
  @include options($theme-colors, 'hover') using ($value) {
    background: $value;
  }
}

.text {
  @include options($theme-colors, 'hover') using ($value) {
    color: $value;
  }
}

.bg {
  @include options($theme-base, 'hover') using ($value) {
    background: $value;
  }
}

.text {
  @include options($theme-base, 'hover') using ($value) {
    color: $value;
  }
}

.bg {
  @include options($theme-text, 'hover') using ($value) {
    background: $value;
  }
}

.text {
  @include options($theme-text, 'hover') using ($value) {
    color: $value;
  }
}

// .bg-gradient {
//   @include options($gradient) using ($value) {
//     background: $value;
//   }
// }

// .text-gradient {
//   @include options($gradient) using ($value) {
//     background: $value;
//   }
// }

@include variants('responsive') using ($props...) {
  .p {
    @include options($spacing, $props...) using ($value) {
      padding: $value;
    }
  }

  .px {
    @include options($spacing, $props...) using ($value) {
      padding-right: $value;
      padding-left: $value;
    }
  }

  .py {
    @include options($spacing, $props...) using ($value) {
      padding-bottom: $value;
      padding-top: $value;
    }
  }

  .pt {
    @include options($spacing, $props...) using ($value) {
      padding-top: $value;
    }
  }

  .pr {
    @include options($spacing, $props...) using ($value) {
      padding-right: $value;
    }
  }

  .pb {
    @include options($spacing, $props...) using ($value) {
      padding-bottom: $value;
    }
  }

  .pl {
    @include options($spacing, $props...) using ($value) {
      padding-left: $value;
    }
  }

  .m {
    @include options($spacing, $props...) using ($value) {
      margin: $value;
    }
  }

  .mx {
    @include options($spacing, $props...) using ($value) {
      margin-right: $value;
      margin-left: $value;
    }
  }

  .my {
    @include options($spacing, $props...) using ($value) {
      margin-bottom: $value;
      margin-top: $value;
    }
  }

  .mt {
    @include options($spacing, $props...) using ($value) {
      margin-top: $value;
    }
  }

  .mr {
    @include options($spacing, $props...) using ($value) {
      margin-right: $value;
    }
  }

  .mb {
    @include options($spacing, $props...) using ($value) {
      margin-bottom: $value;
    }
  }

  .ml {
    @include options($spacing, $props...) using ($value) {
      margin-left: $value;
    }
  }

  .text {
    @include options($fontsize, $props...) using ($value) {
      font-size: $value;
    }
    @include options($lineheight, $props...) using ($value) {
      line-height: $value;
    }
    @include options($align, $props...) using ($value) {
      text-align: $value;
    }
  }

  .h {
    @include options($height, $props...) using ($value) {
      height: $value;
    }
  }

  .w {
    @include options($width, $props...) using ($value) {
      width: $value;
    }
  }

  .min-h {
    @include options($height, $props...) using ($value) {
      min-height: $value;
    }
  }

  .min-w {
    @include options($width, $props...) using ($value) {
      min-width: $value;
    }
  }

  .max-h {
    @include options($height, $props...) using ($value) {
      max-height: $value;
    }
  }

  .max-w {
    @include options($width, $props...) using ($value) {
      max-width: $value;
    }
  }
}
